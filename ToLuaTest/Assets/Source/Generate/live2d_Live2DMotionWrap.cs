//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class live2d_Live2DMotionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(live2d.Live2DMotion), typeof(live2d.AMotion));
		L.RegFunction("loadMotion", loadMotion);
		L.RegFunction("getDurationMSec", getDurationMSec);
		L.RegFunction("getLoopDurationMSec", getLoopDurationMSec);
		L.RegFunction("updateParamExe", updateParamExe);
		L.RegFunction("isLoop", isLoop);
		L.RegFunction("setLoop", setLoop);
		L.RegFunction("setLoopFadeIn", setLoopFadeIn);
		L.RegFunction("isLoopFadeIn", isLoopFadeIn);
		L.RegFunction("getFPS", getFPS);
		L.RegFunction("setFPS", setFPS);
		L.RegFunction("New", _Createlive2d_Live2DMotion);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _Createlive2d_Live2DMotion(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				live2d.Live2DMotion obj = new live2d.Live2DMotion();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: live2d.Live2DMotion.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int loadMotion(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes<byte[]>(L, 1))
			{
				byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
				live2d.Live2DMotion o = live2d.Live2DMotion.loadMotion(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<System.IO.Stream>(L, 1))
			{
				System.IO.Stream arg0 = (System.IO.Stream)ToLua.ToObject(L, 1);
				live2d.Live2DMotion o = live2d.Live2DMotion.loadMotion(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<string>(L, 1))
			{
				string arg0 = ToLua.ToString(L, 1);
				live2d.Live2DMotion o = live2d.Live2DMotion.loadMotion(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: live2d.Live2DMotion.loadMotion");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getDurationMSec(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			live2d.Live2DMotion obj = (live2d.Live2DMotion)ToLua.CheckObject<live2d.Live2DMotion>(L, 1);
			int o = obj.getDurationMSec();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getLoopDurationMSec(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			live2d.Live2DMotion obj = (live2d.Live2DMotion)ToLua.CheckObject<live2d.Live2DMotion>(L, 1);
			int o = obj.getLoopDurationMSec();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int updateParamExe(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			live2d.Live2DMotion obj = (live2d.Live2DMotion)ToLua.CheckObject<live2d.Live2DMotion>(L, 1);
			live2d.ALive2DModel arg0 = (live2d.ALive2DModel)ToLua.CheckObject<live2d.ALive2DModel>(L, 2);
			long arg1 = LuaDLL.tolua_checkint64(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			live2d.MotionQueueEnt arg3 = (live2d.MotionQueueEnt)ToLua.CheckObject<live2d.MotionQueueEnt>(L, 5);
			obj.updateParamExe(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isLoop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			live2d.Live2DMotion obj = (live2d.Live2DMotion)ToLua.CheckObject<live2d.Live2DMotion>(L, 1);
			bool o = obj.isLoop();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setLoop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			live2d.Live2DMotion obj = (live2d.Live2DMotion)ToLua.CheckObject<live2d.Live2DMotion>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.setLoop(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setLoopFadeIn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			live2d.Live2DMotion obj = (live2d.Live2DMotion)ToLua.CheckObject<live2d.Live2DMotion>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.setLoopFadeIn(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isLoopFadeIn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			live2d.Live2DMotion obj = (live2d.Live2DMotion)ToLua.CheckObject<live2d.Live2DMotion>(L, 1);
			bool o = obj.isLoopFadeIn();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getFPS(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			live2d.Live2DMotion obj = (live2d.Live2DMotion)ToLua.CheckObject<live2d.Live2DMotion>(L, 1);
			float o = obj.getFPS();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setFPS(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			live2d.Live2DMotion obj = (live2d.Live2DMotion)ToLua.CheckObject<live2d.Live2DMotion>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.setFPS(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

