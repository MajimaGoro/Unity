//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class live2d_MotionQueueManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(live2d.MotionQueueManager), typeof(System.Object));
		L.RegFunction("startMotion", startMotion);
		L.RegFunction("updateParam", updateParam);
		L.RegFunction("isFinished", isFinished);
		L.RegFunction("stopAllMotions", stopAllMotions);
		L.RegFunction("setMotionDebugMode", setMotionDebugMode);
		L.RegFunction("New", _Createlive2d_MotionQueueManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _Createlive2d_MotionQueueManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				live2d.MotionQueueManager obj = new live2d.MotionQueueManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: live2d.MotionQueueManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int startMotion(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				live2d.MotionQueueManager obj = (live2d.MotionQueueManager)ToLua.CheckObject<live2d.MotionQueueManager>(L, 1);
				live2d.AMotion arg0 = (live2d.AMotion)ToLua.CheckObject<live2d.AMotion>(L, 2);
				int o = obj.startMotion(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 3)
			{
				live2d.MotionQueueManager obj = (live2d.MotionQueueManager)ToLua.CheckObject<live2d.MotionQueueManager>(L, 1);
				live2d.AMotion arg0 = (live2d.AMotion)ToLua.CheckObject<live2d.AMotion>(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				int o = obj.startMotion(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: live2d.MotionQueueManager.startMotion");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int updateParam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			live2d.MotionQueueManager obj = (live2d.MotionQueueManager)ToLua.CheckObject<live2d.MotionQueueManager>(L, 1);
			live2d.ALive2DModel arg0 = (live2d.ALive2DModel)ToLua.CheckObject<live2d.ALive2DModel>(L, 2);
			bool o = obj.updateParam(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isFinished(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				live2d.MotionQueueManager obj = (live2d.MotionQueueManager)ToLua.CheckObject<live2d.MotionQueueManager>(L, 1);
				bool o = obj.isFinished();
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 2)
			{
				live2d.MotionQueueManager obj = (live2d.MotionQueueManager)ToLua.CheckObject<live2d.MotionQueueManager>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				bool o = obj.isFinished(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: live2d.MotionQueueManager.isFinished");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int stopAllMotions(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			live2d.MotionQueueManager obj = (live2d.MotionQueueManager)ToLua.CheckObject<live2d.MotionQueueManager>(L, 1);
			obj.stopAllMotions();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setMotionDebugMode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			live2d.MotionQueueManager obj = (live2d.MotionQueueManager)ToLua.CheckObject<live2d.MotionQueueManager>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.setMotionDebugMode(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

